/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package HelpDesk;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Dictionary;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author lepolted
 */
public class AssistantPromotion extends javax.swing.JFrame {

    /**
     * Creates new form AssistantPromotion
     */
    public AssistantPromotion() {
        
        initComponents();
        DatabaseConnection db = new DatabaseConnection();
        Connection conn = db.connectToDB();

        String[] studentList = null;
        String[] assistantList = null;
        
        String sql = "Select COUNT(Username) as totalCount From `HD_Accounts` where Permission = 0";
        ResultSet resultCount = db.getResults(conn, sql);
        try {
            if(resultCount.next())
            {
                int count = resultCount.getInt("totalCount");
                studentList = new String[count];
                try {
                    int i=0;

                    sql = "Select Username From `HD_Accounts` where Permission = 0";
                    ResultSet rs = db.getResults(conn, sql);
                    while(rs.next())
                    {
                        studentList[i] = rs.getString("Username");
                        i++;
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(AssistantPromotion.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(AssistantPromotion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        sql = "Select COUNT(Username) as totalCount From `HD_Accounts` where Permission = 1";
        resultCount = db.getResults(conn, sql);
        try {
            if(resultCount.next())
            {
                int count = resultCount.getInt("totalCount");
                assistantList = new String[count];
                try {
                    int i=0;
                    
                    sql = "Select Username From `HD_Accounts` where Permission = 1";
                    ResultSet rs = db.getResults(conn, sql);
                    
                    while(rs.next())
                    {
                        assistantList[i] = rs.getString("Username");
                        i++;
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(AssistantPromotion.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(AssistantPromotion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        allStudentList.setListData(studentList);
        allAssistantsList.setListData(assistantList);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        allStudentList = new javax.swing.JList();
        promoteStudentButton = new javax.swing.JButton();
        demoteStudentButton = new javax.swing.JButton();
        exitAssistantPromotionButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        allAssistantsList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        allStudentList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(allStudentList);

        promoteStudentButton.setText("Promote");
        promoteStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promoteStudentButtonActionPerformed(evt);
            }
        });

        demoteStudentButton.setText("Demote");
        demoteStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                demoteStudentButtonActionPerformed(evt);
            }
        });

        exitAssistantPromotionButton.setText("Exit");
        exitAssistantPromotionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitAssistantPromotionButtonActionPerformed(evt);
            }
        });

        allAssistantsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(allAssistantsList);

        jLabel1.setText("Students");

        jLabel2.setText("Assistants");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(promoteStudentButton))
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jLabel2)
                                    .addComponent(demoteStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitAssistantPromotionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(demoteStudentButton)
                        .addComponent(exitAssistantPromotionButton))
                    .addComponent(promoteStudentButton))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void promoteStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promoteStudentButtonActionPerformed
        // TODO add your handling code here:
        DatabaseConnection db = new DatabaseConnection();
        Connection conn = db.connectToDB();
        
        String sql = "UPDATE  `lepolted`.`HD_Accounts` SET  `Permission` =  '1' WHERE  `HD_Accounts`.`Username` = '"+ allStudentList.getSelectedValue() +"'";
        db.updateDatabase(conn, sql);
        
        new AssistantPromotion().setVisible(true);
        this.dispose();
        
        
    }//GEN-LAST:event_promoteStudentButtonActionPerformed

    private void demoteStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_demoteStudentButtonActionPerformed
        // TODO add your handling code here:
        DatabaseConnection db = new DatabaseConnection();
        Connection conn = db.connectToDB();
        
        String sql = "UPDATE  `lepolted`.`HD_Accounts` SET  `Permission` =  '0' WHERE  `HD_Accounts`.`Username` = '"+ allAssistantsList.getSelectedValue() +"'";
        db.updateDatabase(conn, sql);
        
        new AssistantPromotion().setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_demoteStudentButtonActionPerformed

    private void exitAssistantPromotionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitAssistantPromotionButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitAssistantPromotionButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssistantPromotion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssistantPromotion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssistantPromotion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssistantPromotion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AssistantPromotion().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList allAssistantsList;
    private javax.swing.JList allStudentList;
    private javax.swing.JButton demoteStudentButton;
    private javax.swing.JButton exitAssistantPromotionButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton promoteStudentButton;
    // End of variables declaration//GEN-END:variables
}
